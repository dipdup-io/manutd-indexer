# generated by DipDup 8.0.0b4

from __future__ import annotations

from typing import Any
from typing import Dict

from orjson import orjson
from pydantic import RootModel

from manutd_indexer.models import MetadataBigMapModelMixin


class MetadataValue(RootModel[str]):
    root: str

    def as_dict(self) -> dict[str, Any]:
        value = self.root

        try:
            value = bytes.fromhex(value).decode()
        except ValueError:
            pass

        try:
            return orjson.loads(value)
        except ValueError:
            pass

        raise ValueError

    def get_field_dto(self) -> Dict[str, Any]:
        name = MetadataBigMapModelMixin.value.model_field_name
        value = self.as_dict()

        return {name: value}
